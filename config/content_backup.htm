<h1>About</h1>
<p></p>
<p><span>GitHub </span>倉儲：<a href="https://github.com/40823224/cd2021" title="https://github.com/40823224/cd2021">https://github.com/40823224/cd2021</a></p>
<p>GitHub：<a href="https://40823224.github.io/cd2021/content/index.html">https://40823224.github.io/cd2021/content/index.html</a></p>
<p><span>GitLab倉儲：</span><a href="https://gitlab.com/40823224/cd2021">https://gitlab.com/40823224/cd2021</a></p>
<p>GitLab：<a href="https://40823224.gitlab.io/cd2021/content/index.html">https://40823224.gitlab.io/cd2021/content/index.html</a></p>
<p>Gogs：<a href="https://fossil.kmol.info:3443/40823224/cd2021">https://fossil.kmol.info:3443/40823224/cd2021</a></p>
<p>Fossil：<a href="https://fossil.kmol.info/u/40823224/doc/trunk/content/index.html">https://fossil.kmol.info/u/40823224/doc/trunk/content/index.html</a></p>
<hr/>
<p>stage1-bg13：<a href="https://40823224.github.io/stage1-bg13/content/index.html">https://40823224.github.io/stage1-bg13/content/index.html</a></p>
<p>stage2-bg3：<a href="https://40823224.github.io/stage2-bg3/content/index.html">https://40823224.github.io/stage2-bg3/content/index.html</a></p>
<p>stage3-bg2：<a href="https://40823224.github.io/stage3-bg2/content/index.html">https://40823224.github.io/stage3-bg2/content/index.html</a></p>
<h1>stage1</h1>
<p>stage1-bg13</p>
<p>組員：40823223、40823224</p>
<p>倉儲：</p>
<p><a href="https://40823223.github.io/stage1-bg13/content/index.html">https://40823223.github.io/stage1-bg13/content/index.html</a></p>
<p><a href="https://40823224.github.io/stage1-bg13/content/index.html">https://40823224.github.io/stage1-bg13/content/index.html</a></p>
<h2>W1</h2>
<p>建立倉儲</p>
<p><img alt="" height="282" src="/images/倉儲.PNG" width="600"/></p>
<p>開啟leo</p>
<p><img alt="" height="281" src="/images/leo.png" width="500"/></p>
<p>開啟blog</p>
<p><img alt="" height="281" src="/images/blog.png" width="500"/></p>
<p>開啟Disqus</p>
<p><img alt="" height="281" src="/images/dis.png" width="500"/></p>
<h2>W2</h2>
<p><strong>分組題目內容</strong></p>
<p><span>stage1-bg13</span><br/><span>主題：人力軌道車</span><br/><span>高鐵太貴了，搭這個不用錢</span><br/><span>W2：繪製零件</span><br/><span>W3：模擬路徑並除錯</span><br/><span>W4：報告內容</span></p>
<p><span><img alt="" height="378" src="/images/軌道車.PNG" width="500"/><br/></span></p>
<h2>W3</h2>
<p>討論內容</p>
<p><img alt="" height="234" src="/images/討論1.PNG" width="500"/></p>
<p>初版組合圖</p>
<p><img alt="" height="566" src="/images/初版.png" width="500"/></p>
<p>成功版組合圖</p>
<p><img alt="" height="443" src="/images/成功版.PNG" width="500"/></p>
<h2>W4</h2>
<p><strong>第一版作動</strong></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/LZOSuJbeLGc" width="500"></iframe></p>
<p><span>作動方式 :四連桿機構 但因設計連桿不良失敗 因設計的四連桿機構中的曲柄搖桿機構須要找到兩個固定點 但固定點只有辦法設定一個 另一個需在轉動的齒輪上 若轉動的齒輪變成固定端將無法作動 故此次設計失敗。</span></p>
<p><strong>成功版作動</strong></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/28EcMEL3JRE" width="500"></iframe></span></p>
<p><span>設計內容：重新設計了作動方式 一樣是使用連桿 但這次是把下壓的連桿另一端改成一個旋轉軸 再將軸連接一個齒輪 並將輪子上的軸也加裝了齒輪 兩個齒輪碰到後 驅動了輪子旋轉。</span></p>
<h2>W5</h2>
<p><span>簡報報告(3/19)</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/5a1uyA4r6tk" width="500"></iframe></span></p>
<hr/>
<p><span>stage1-bg 影片長度</span></p>
<p><span>使用get_video_duration.py 讀取2b的影片長度</span></p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false"># pip install moviepy
import os
from moviepy.editor import VideoFileClip

# Converts into more readable format
def convert(seconds):
    hours = seconds // 3600
    seconds %= 3600
    mins = seconds // 60
    seconds %= 60
    return hours, mins, seconds
    
for dname, dirs, files in os.walk("2021-03_2b_stage1"):
    for fname in files:
        vName = os.path.join(dname, fname)
        clip = VideoFileClip(vName)
        hours, mins, secs = convert(clip.duration)
        print(fname + "組:", str(int(mins)) + "分", str(int(secs)) + "秒")</pre>
<p><iframe allow="autoplay" height="480" src="https://drive.google.com/file/d/1PkqWUdZCquATknAoJHXRCbnHGfzJ_UTK/preview" width="640"></iframe></p>
<p></p>
<p><iframe height="500" src="https://docs.google.com/spreadsheets/d/12zrRcLxQQV5w6YqTfUWLFhXFylb4fU6IfCkdKy7IOIs/edit#gid=0" width="500"></iframe></p>
<p><span></span><span>stage1-bg1 07:14</span></p>
<p><span>stage1-bg2 01:55</span></p>
<p><span>stage1-bg3 01:58</span></p>
<p><span>stage1-bg4 02:51</span></p>
<p><span>stage1-bg5 03:00</span></p>
<p><span>stage1-bg6 03:07</span></p>
<p><span>stage1-bg7 02:47</span></p>
<p><span>stage1-bg8 03:20</span></p>
<p><span>stage1-bg9 02:43</span></p>
<p><span>stage1-bg10 02:20</span></p>
<p><span>stage1-bg11 01:38</span></p>
<p><span>stage1-bg12 01:47</span></p>
<p><span>stage1-bg13 02:09</span></p>
<p><span>stage1-bg14 05:58</span></p>
<p><span>stage1-bg15 03:24</span></p>
<p><span>stage1-bg16 03:33</span></p>
<p><span>stage1-bg17 04:33</span></p>
<p><span>stage1-bg18 05:03</span></p>
<p><span>stage1-bg19 03:11</span></p>
<p><span>stage1-bg20 03:32</span></p>
<p><span>stage1-bg21 05:02</span></p>
<p><span>stage1-bg22 04:47</span></p>
<p><span>stage1-bg23 02:55</span></p>
<p><span>stage1-bg24 05:00</span></p>
<p><span>stage1-bg25 04:53</span></p>
<p><span>stage1-bg26</span></p>
<p><span>stage1-bg27 03:43</span></p>
<p><span>stage1-bg28</span></p>
<p><span>stage1-bg29</span></p>
<h1>stage2</h1>
<p>stage2-bg3</p>
<p>組員：40823206、40823207、40823223、40823224</p>
<p>倉儲：</p>
<p><a href="https://40823206.github.io/stage2-bg3/content/index.html">https://40823206.github.io/stage2-bg3/content/index.html</a></p>
<p><a href="https://40823207.github.io/stage2-bg3/content/index.html">https://40823207.github.io/stage2-bg3/content/index.html</a></p>
<p><a href="https://40823223.github.io/stage2-bg3/content/index.html">https://40823223.github.io/stage2-bg3/content/index.html</a></p>
<p><a href="https://40823224.github.io/stage2-bg3/content/index.html">https://40823224.github.io/stage2-bg3/content/index.html</a></p>
<p></p>
<h2>W6</h2>
<p><span>stage2-bg3</span><br/><span>主題：夾娃娃機</span><br/><span>W7：繪製零件</span><br/><span>W8：模擬路徑並除錯</span><br/><span>W9：報告內容</span></p>
<p><span><img alt="" height="281" src="/images/娃娃.jpg" width="500"/></span></p>
<h2>W7</h2>
<p><a href="https://gitter.im/stage2-bg3/community">小組討論Gitter</a></p>
<h6>分配工作</h6>
<h6>繪圖:40823207、40823223</h6>
<h6>網頁編輯:40823206、40823224</h6>
<p>討論內容：</p>
<p><img alt="" height="551" src="/images/討論1.jpg" width="300"/><img alt="" height="558" src="/images/討論2.jpg" width="300"/></p>
<p><img alt="" height="558" src="/images/討論3.jpg" width="300"/><img alt="" height="558" src="/images/討論4.jpg" width="300"/></p>
<p><img alt="" height="555" src="/images/討論5.jpg" width="300"/></p>
<p></p>
<h2>W8</h2>
<p>繪製零件</p>
<p><a href="https://drive.google.com/drive/folders/1ccYKJoqXEuqT87qLssCHs7LOY36F3T1M">雲端下載零件檔</a></p>
<h2>W9</h2>
<p>期中考週</p>
<p>零件檔如下</p>
<table height="19" width="103">
<tbody>
<tr>
<td style="width: 93.6px;">
<table>
<tbody>
<tr>
<td><img caption="false" height="118" src="https://40823206.github.io/cd2021/images/10.png" width="100"/></td>
<td><img alt="" height="78" src="https://40823206.github.io/cd2021/images/11.png" width="120"/></td>
<td><img alt="" height="67" src="https://40823206.github.io/cd2021/images/13.png" width="120"/></td>
<td><img alt="" height="72" src="https://40823206.github.io/cd2021/images/14.png" width="120"/></td>
</tr>
<tr>
<td><a href="https://drive.google.com/file/d/1zBr2eFzB1aP52SsgtMG8j7HLfCKazeEw/view">連桿</a></td>
<td><a href="https://drive.google.com/file/d/1CgyKPcSzLgB3Ue97ydUsgMSS9ejZUbyZ/view">下底盤</a></td>
<td><a href="https://drive.google.com/file/d/10EWsN-aQlVQviLnbAxJxlPkr26N4j6mF/view">上底盤</a></td>
<td><a href="https://drive.google.com/file/d/1B0UZRDZHWXd2jWETmtJf9a3rH3zvVXq6/view">尺條</a></td>
</tr>
<tr>
<td><img caption="false" height="125" src="https://40823206.github.io/cd2021/images/15.png" width="125"/></td>
<td><img alt="" height="120" src="https://40823206.github.io/cd2021/images/16.png" width="120"/></td>
<td><img alt="" height="120" src="https://40823206.github.io/cd2021/images/17.png" width="120"/></td>
<td><img alt="" height="120" src="https://40823206.github.io/cd2021/images/18.png" width="120"/></td>
</tr>
<tr>
<td><a href="https://drive.google.com/file/d/13mn6GNJrANOqOxYXbWyNT_Tg9VDEbF6a/view">齒輪</a></td>
<td><a href="https://drive.google.com/file/d/1h9Jd1l79dZsEUrv9F5THZMARjudjf6wR/view">連桿2</a></td>
<td><a href="https://drive.google.com/file/d/1kI-S1rBEUR9m9xshOa0LzTDxR0wSUn05/view">連桿3</a></td>
<td><a href="https://drive.google.com/file/d/1ekK68mz9OeTRIAMeVF0zgHl_4SHH6Al0/view">底座</a></td>
</tr>
<tr>
<td><img alt="" height="120" src="https://40823206.github.io/cd2021/images/19.png" width="120"/></td>
<td><img alt="" height="101" src="https://40823206.github.io/cd2021/images/2.png" width="120"/></td>
<td><img caption="false" height="120" src="https://40823206.github.io/cd2021/images/20.png" width="120"/></td>
<td><img alt="" height="87" src="https://40823206.github.io/cd2021/images/3.png" width="120"/></td>
</tr>
<tr>
<td><a href="https://drive.google.com/file/d/1iup2OSAqf-zR_dvN5gpV_BmlTpH10i3q/view">滑塊</a></td>
<td></td>
<td><a href="https://drive.google.com/file/d/1Nh_lJk6peEVaNVQ83daAFod05yslfxqw/view">連桿1</a></td>
<td><a href="https://drive.google.com/file/d/1Ko95M1TD5Omv04TObtIPBXwwEdCTPgVO/view">墊圈</a></td>
</tr>
<tr>
<td><img alt="" height="86" src="https://40823206.github.io/cd2021/images/4.png" width="120"/></td>
<td><img caption="false" height="98" src="https://40823206.github.io/cd2021/images/6.png" width="120"/></td>
<td><img alt="" height="107" src="https://40823206.github.io/cd2021/images/8.png" width="120"/></td>
<td><img alt="" height="145" src="https://40823206.github.io/cd2021/images/9.png" width="120"/></td>
</tr>
<tr>
<td><a href="https://drive.google.com/file/d/1sYIQ4sKJIjEghwZF96sU0mzia7VT1of0/view">鉤爪</a></td>
<td><a href="https://drive.google.com/file/d/1rnIP7AfVFAZeTZtAUlWjRE3oKn2lXxQk/view">馬達</a></td>
<td><a href="https://drive.google.com/file/d/1F-SF7HRA788u9uAVomkxvgPiJ8nSVdl2/view">爪子機架</a></td>
<td></td>
</tr>
<tr>
<td><img alt="" height="120" src="https://40823206.github.io/cd2021/images/%E5%A2%8A%E7%89%87.png" width="120"/></td>
<td><img alt="" height="120" src="https://40823206.github.io/cd2021/images/%E5%A2%8A%E7%89%871.png" width="120"/></td>
<td><img alt="" height="120" src="https://40823206.github.io/cd2021/images/%E5%A2%8A%E7%89%872.png" width="120"/></td>
<td><img alt="" height="120" src="https://40823206.github.io/cd2021/images/%E8%BD%89%E6%8A%8A.png" width="120"/></td>
</tr>
<tr>
<td><a href="https://drive.google.com/file/d/1Cazddqtk2Yz7C7GLyAVpSFc2GXSjoB1x/view">墊片1</a></td>
<td><a href="https://drive.google.com/file/d/1tZY42KMEQKmlGese4-YAplhxXBH3yiju/view">墊片2</a></td>
<td><a href="https://drive.google.com/file/d/1gZ_zSghYnOGmlJ7ppVFZofuZAOwIwqSk/view">墊片3</a></td>
<td><a href="https://drive.google.com/file/d/1qLuZg_cXjOrCyqTPgN4kT7VcAHIBnhc4/view">轉把</a></td>
</tr>
</tbody>
</table>
</td>
</tr>
</tbody>
</table>
<h1>stage3</h1>
<p><span>stage3-bg2</span></p>
<p><span>組員：</span></p>
<p><span>40823217、40823201、40823209、40823210、</span></p>
<p><span>40823206、40823207、40823223、40823224</span></p>
<p>倉儲：</p>
<p><a href="https://40823217.github.io/stage3-bg2/content/index.html">https://40823217.github.io/stage3-bg2/content/index.html</a></p>
<p><a href="https://40823201.github.io/stage3-bg2/content/index.html">https://40823201.github.io/stage3-bg2/content/index.html</a></p>
<p><a href="https://40823209.github.io/stage3-bg2/content/index.html">https://40823209.github.io/stage3-bg2/content/index.html</a></p>
<p><a href="https://40823210.github.io/stage3-bg2/content/index.html">https://40823210.github.io/stage3-bg2/content/index.html</a></p>
<p><a href="https://40823206.github.io/stage3-bg2/content/index.html">https://40823206.github.io/stage3-bg2/content/index.html</a></p>
<p><a href="https://40823207.github.io/stage3-bg2/content/index.html">https://40823207.github.io/stage3-bg2/content/index.html</a></p>
<p><a href="https://40823223.github.io/stage3-bg2/content/index.html">https://40823223.github.io/stage3-bg2/content/index.html</a></p>
<p><a href="https://40823224.github.io/stage3-bg2/content/index.html">https://40823224.github.io/stage3-bg2/content/index.html</a></p>
<h2>W10</h2>
<p><strong><img alt="" height="314" src="/images/w10-1.png" width="600"/></strong></p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">python -m http.server 8000 --bind 192.168.192.127</pre>
<p>連線到ipv4</p>
<p></p>
<p><strong></strong><strong><img alt="" height="600" src="/images/w10-3.png" width="436"/></strong></p>
<p><b>輸入網址確認是否成功 (192.168.192.127:8000)</b></p>
<h2>task 演練</h2>
<h3>task1</h3>
<p>一、建立 stage3_2b.py 跑出小組組長、組員及其超連結</p>
<p><img alt="" height="416" src="/images/task1-1.PNG" width="600"/></p>
<p></p>
<p><a href="http://github.com/40823245/cd2021">40823245 repo</a> | <a href="http://40823245.github.io/cd2021">40823245 site</a> | <a href="http://github.com/40823245/stage3-bg1">stage3-bg1 repo</a> | <a href="http://40823245.github.io/stage3-bg1">stage3-bg1 site</a><br/><a href="http://github.com/40823251/cd2021">40823251 repo</a> | <a href="http://40823251.github.io/cd2021">40823251 site</a> | <a href="http://github.com/40823251/stage3-bg1">stage3-bg1 repo</a> | <a href="http://40823251.github.io/stage3-bg1">stage3-bg1 site</a><br/><a href="http://github.com/40823208/cd2021">40823208 repo</a> | <a href="http://40823208.github.io/cd2021">40823208 site</a> | <a href="http://github.com/40823208/stage3-bg1">stage3-bg1 repo</a> | <a href="http://40823208.github.io/stage3-bg1">stage3-bg1 site</a><br/><a href="http://github.com/40823213/cd2021">40823213 repo</a> | <a href="http://40823213.github.io/cd2021">40823213 site</a> | <a href="http://github.com/40823213/stage3-bg1">stage3-bg1 repo</a> | <a href="http://40823213.github.io/stage3-bg1">stage3-bg1 site</a><br/><a href="http://github.com/40823232/cd2021">40823232 repo</a> | <a href="http://40823232.github.io/cd2021">40823232 site</a> | <a href="http://github.com/40823232/stage3-bg1">stage3-bg1 repo</a> | <a href="http://40823232.github.io/stage3-bg1">stage3-bg1 site</a><br/><a href="http://github.com/40823234/cd2021">40823234 repo</a> | <a href="http://40823234.github.io/cd2021">40823234 site</a> | <a href="http://github.com/40823234/stage3-bg1">stage3-bg1 repo</a> | <a href="http://40823234.github.io/stage3-bg1">stage3-bg1 site</a><br/><a href="http://github.com/40823235/cd2021">40823235 repo</a> | <a href="http://40823235.github.io/cd2021">40823235 site</a> | <a href="http://github.com/40823235/stage3-bg1">stage3-bg1 repo</a> | <a href="http://40823235.github.io/stage3-bg1">stage3-bg1 site</a><br/><a href="http://github.com/40823246/cd2021">40823246 repo</a>| <a href="http://40823246.github.io/cd2021">40823246 site</a> | <a href="http://github.com/40823246/stage3-bg1">stage3-bg1 repo</a> | <a href="http://40823246.github.io/stage3-bg1">stage3-bg1 site</a><br/><br/>----------<br/><a href="http://github.com/40823217/cd2021">40823217 repo</a> | <a href="http://40823217.github.io/cd2021">40823217 site</a> | <a href="http://github.com/40823217/stage3-bg2">stage3-bg2 repo</a> | <a href="http://40823217.github.io/stage3-bg2">stage3-bg2 site</a><br/><a href="http://github.com/40823201/cd2021">40823201 repo</a> | <a href="http://40823201.github.io/cd2021">40823201 site</a> | <a href="http://github.com/40823201/stage3-bg2">stage3-bg2 repo</a> | <a href="http://40823201.github.io/stage3-bg2">stage3-bg2 site</a><br/><a href="http://github.com/40823209/cd2021">40823209 repo</a> | <a href="http://40823209.github.io/cd2021">40823209 site</a> | <a href="http://github.com/40823209/stage3-bg2">stage3-bg2 repo</a> | <a href="http://40823209.github.io/stage3-bg2">stage3-bg2 site</a><br/><a href="http://github.com/40823210/cd2021">40823210 repo</a> | <a href="http://40823210.github.io/cd2021">40823210 site</a> | <a href="http://github.com/40823210/stage3-bg2">stage3-bg2 repo</a> | <a href="http://40823210.github.io/stage3-bg2">stage3-bg2 site</a><br/><a href="http://github.com/40823206/cd2021">40823206 repo</a> | <a href="http://40823206.github.io/cd2021">40823206 site</a> | <a href="http://github.com/40823206/stage3-bg2">stage3-bg2 repo</a> | <a href="http://40823206.github.io/stage3-bg2">stage3-bg2 site</a><br/><a href="http://github.com/40823207/cd2021">40823207 repo</a> | <a href="http://40823207.github.io/cd2021">40823207 site</a> | <a href="http://github.com/40823207/stage3-bg2">stage3-bg2 repo</a> | <a href="http://40823207.github.io/stage3-bg2">stage3-bg2 site</a><br/><a href="http://github.com/40823223/cd2021">40823223 repo</a> | <a href="http://40823223.github.io/cd2021">40823223 site</a> | <a href="http://github.com/40823223/stage3-bg2">stage3-bg2 repo</a> | <a href="http://40823223.github.io/stage3-bg2">stage3-bg2 site</a><br/><a href="http://github.com/40823224/cd2021">40823224 repo</a>| <a href="http://40823224.github.io/cd2021">40823224 site</a> | <a href="http://github.com/40823224/stage3-bg2">stage3-bg2 repo</a> | <a href="http://40823224.github.io/stage3-bg2">stage3-bg2 site</a><br/><br/>----------<br/><a href="http://github.com/40823236/cd2021">40823236 repo</a> | <a href="http://40823236.github.io/cd2021">40823236 site</a> | <a href="http://github.com/40823236/stage3-bg3">stage3-bg3 repo</a> | <a href="http://40823236.github.io/stage3-bg3">stage3-bg3 site</a><br/><a href="http://github.com/40823202/cd2021">40823202 repo</a> | <a href="http://40823202.github.io/cd2021">40823202 site</a> | <a href="http://github.com/40823202/stage3-bg3">stage3-bg3 repo</a> | <a href="http://40823202.github.io/stage3-bg3">stage3-bg3 site</a><br/><a href="http://github.com/40823203/cd2021">40823203 repo</a> | <a href="http://40823203.github.io/cd2021">40823203 site</a> | <a href="http://github.com/40823203/stage3-bg3">stage3-bg3 repo</a> | <a href="http://40823203.github.io/stage3-bg3">stage3-bg3 site</a><br/><a href="http://github.com/40823212/cd2021">40823212 repo</a> | <a href="http://40823212.github.io/cd2021">40823212 site</a> | <a href="http://github.com/40823212/stage3-bg3">stage3-bg3 repo</a> | <a href="http://40823212.github.io/stage3-bg3">stage3-bg3 site</a><br/><a href="http://github.com/40823219/cd2021">40823219 repo</a> | <a href="http://40823219.github.io/cd2021">40823219 site</a> | <a href="http://github.com/40823219/stage3-bg3">stage3-bg3 repo</a> | <a href="http://40823219.github.io/stage3-bg3">stage3-bg3 site</a><br/><a href="http://github.com/40823222/cd2021">40823222 repo</a> | <a href="http://40823222.github.io/cd2021">40823222 site</a> | <a href="http://github.com/40823222/stage3-bg3">stage3-bg3 repo</a> | <a href="http://40823222.github.io/stage3-bg3">stage3-bg3 site</a><br/><a href="http://github.com/40823231-2/cd2021">40823231-2 repo</a> | <a href="http://40823231-2.github.io/cd2021">40823231-2 site</a> | <a href="http://github.com/40823231-2/stage3-bg3">stage3-bg3 repo</a> | <a href="http://40823231-2.github.io/stage3-bg3">stage3-bg3 site</a><br/><a href="http://github.com/40823244/cd2021">40823244 repo</a>| <a href="http://40823244.github.io/cd2021">40823244 site</a> | <a href="http://github.com/40823244/stage3-bg3">stage3-bg3 repo</a> | <a href="http://40823244.github.io/stage3-bg3">stage3-bg3 site</a><br/><br/>----------<br/><a href="http://github.com/40823239/cd2021">40823239 repo</a> | <a href="http://40823239.github.io/cd2021">40823239 site</a> | <a href="http://github.com/40823239/stage3-bg4">stage3-bg4 repo</a> | <a href="http://40823239.github.io/stage3-bg4">stage3-bg4 site</a><br/><a href="http://github.com/s40723140/cd2021">s40723140 repo</a> | <a href="http://s40723140.github.io/cd2021">s40723140 site</a> | <a href="http://github.com/s40723140/stage3-bg4">stage3-bg4 repo</a> | <a href="http://s40723140.github.io/stage3-bg4">stage3-bg4 site</a><br/><a href="http://github.com/s40723128/cd2021">s40723128 repo</a> | <a href="http://s40723128.github.io/cd2021">s40723128 site</a> | <a href="http://github.com/s40723128/stage3-bg4">stage3-bg4 repo</a> | <a href="http://s40723128.github.io/stage3-bg4">stage3-bg4 site</a><br/><a href="http://github.com/s40723139/cd2021">s40723139 repo</a> | <a href="http://s40723139.github.io/cd2021">s40723139 site</a> | <a href="http://github.com/s40723139/stage3-bg4">stage3-bg4 repo</a> | <a href="http://s40723139.github.io/stage3-bg4">stage3-bg4 site</a><br/><a href="http://github.com/s40723106/cd2021">s40723106 repo</a> | <a href="http://s40723106.github.io/cd2021">s40723106 site</a> | <a href="http://github.com/s40723106/stage3-bg4">stage3-bg4 repo</a> | <a href="http://s40723106.github.io/stage3-bg4">stage3-bg4 site</a><br/><a href="http://github.com/s40723135/cd2021">s40723135 repo</a> | <a href="http://s40723135.github.io/cd2021">s40723135 site</a> | <a href="http://github.com/s40723135/stage3-bg4">stage3-bg4 repo</a> | <a href="http://s40723135.github.io/stage3-bg4">stage3-bg4 site</a><br/><a href="http://github.com/s40723143/cd2021">s40723143 repo</a> | <a href="http://s40723143.github.io/cd2021">s40723143 site</a> | <a href="http://github.com/s40723143/stage3-bg4">stage3-bg4 repo</a> | <a href="http://s40723143.github.io/stage3-bg4">stage3-bg4 site</a><br/><a href="http://github.com/s40723215/cd2021">s40723215 repo</a>| <a href="http://s40723215.github.io/cd2021">s40723215 site</a> | <a href="http://github.com/s40723215/stage3-bg4">stage3-bg4 repo</a> | <a href="http://s40723215.github.io/stage3-bg4">stage3-bg4 site</a><br/><br/>----------<br/><a href="http://github.com/40823221/cd2021">40823221 repo</a> | <a href="http://40823221.github.io/cd2021">40823221 site</a> | <a href="http://github.com/40823221/stage3-bg5">stage3-bg5 repo</a> | <a href="http://40823221.github.io/stage3-bg5">stage3-bg5 site</a><br/><a href="http://github.com/40823204/cd2021">40823204 repo</a> | <a href="http://40823204.github.io/cd2021">40823204 site</a> | <a href="http://github.com/40823204/stage3-bg5">stage3-bg5 repo</a> | <a href="http://40823204.github.io/stage3-bg5">stage3-bg5 site</a><br/><a href="http://github.com/40823205/cd2021">40823205 repo</a> | <a href="http://40823205.github.io/cd2021">40823205 site</a> | <a href="http://github.com/40823205/stage3-bg5">stage3-bg5 repo</a> | <a href="http://40823205.github.io/stage3-bg5">stage3-bg5 site</a><br/><a href="http://github.com/40823220/cd2021">40823220 repo</a> | <a href="http://40823220.github.io/cd2021">40823220 site</a> | <a href="http://github.com/40823220/stage3-bg5">stage3-bg5 repo</a> | <a href="http://40823220.github.io/stage3-bg5">stage3-bg5 site</a><br/><a href="http://github.com/40823228/cd2021">40823228 repo</a> | <a href="http://40823228.github.io/cd2021">40823228 site</a> | <a href="http://github.com/40823228/stage3-bg5">stage3-bg5 repo</a> | <a href="http://40823228.github.io/stage3-bg5">stage3-bg5 site</a><br/><a href="http://github.com/40823237/cd2021">40823237 repo</a> | <a href="http://40823237.github.io/cd2021">40823237 site</a> | <a href="http://github.com/40823237/stage3-bg5">stage3-bg5 repo</a> | <a href="http://40823237.github.io/stage3-bg5">stage3-bg5 site</a><br/><a href="http://github.com/40823242/cd2021">40823242 repo</a> | <a href="http://40823242.github.io/cd2021">40823242 site</a> | <a href="http://github.com/40823242/stage3-bg5">stage3-bg5 repo</a> | <a href="http://40823242.github.io/stage3-bg5">stage3-bg5 site</a><br/><a href="http://github.com/40823250/cd2021">40823250 repo</a>| <a href="http://40823250.github.io/cd2021">40823250 site</a> | <a href="http://github.com/40823250/stage3-bg5">stage3-bg5 repo</a> | <a href="http://40823250.github.io/stage3-bg5">stage3-bg5 site</a><br/><a href="http://github.com/40832244/cd2021">40832244 repo</a>| <a href="http://40832244.github.io/cd2021">40832244 site</a> | <a href="http://github.com/40832244/stage3-bg5">stage3-bg5 repo</a> | <a href="http://40832244.github.io/stage3-bg5">stage3-bg5 site</a><br/>----------<br/><a href="http://github.com/40823225/cd2021">40823225 repo</a> | <a href="http://40823225.github.io/cd2021">40823225 site</a> | <a href="http://github.com/40823225/stage3-bg6">stage3-bg6 repo</a> | <a href="http://40823225.github.io/stage3-bg6">stage3-bg6 site</a><br/><a href="http://github.com/40823214/cd2021">40823214 repo</a> | <a href="http://40823214.github.io/cd2021">40823214 site</a> | <a href="http://github.com/40823214/stage3-bg6">stage3-bg6 repo</a> | <a href="http://40823214.github.io/stage3-bg6">stage3-bg6 site</a><br/><a href="http://github.com/40823218/cd2021">40823218 repo</a> | <a href="http://40823218.github.io/cd2021">40823218 site</a> | <a href="http://github.com/40823218/stage3-bg6">stage3-bg6 repo</a> | <a href="http://40823218.github.io/stage3-bg6">stage3-bg6 site</a><br/><a href="http://github.com/40823211/cd2021">40823211 repo</a> | <a href="http://40823211.github.io/cd2021">40823211 site</a> | <a href="http://github.com/40823211/stage3-bg6">stage3-bg6 repo</a> | <a href="http://40823211.github.io/stage3-bg6">stage3-bg6 site</a><br/><a href="http://github.com/40823248/cd2021">40823248 repo</a> | <a href="http://40823248.github.io/cd2021">40823248 site</a> | <a href="http://github.com/40823248/stage3-bg6">stage3-bg6 repo</a> | <a href="http://40823248.github.io/stage3-bg6">stage3-bg6 site</a><br/><a href="http://github.com/40823247/cd2021">40823247 repo</a> | <a href="http://40823247.github.io/cd2021">40823247 site</a> | <a href="http://github.com/40823247/stage3-bg6">stage3-bg6 repo</a> | <a href="http://40823247.github.io/stage3-bg6">stage3-bg6 site</a><br/><a href="http://github.com/40823216/cd2021">40823216 repo</a> | <a href="http://40823216.github.io/cd2021">40823216 site</a> | <a href="http://github.com/40823216/stage3-bg6">stage3-bg6 repo</a> | <a href="http://40823216.github.io/stage3-bg6">stage3-bg6 site</a><br/><a href="http://github.com/40823238/cd2021">40823238 repo</a>| <a href="http://40823238.github.io/cd2021">40823238 site</a> | <a href="http://github.com/40823238/stage3-bg6">stage3-bg6 repo</a> | <a href="http://40823238.github.io/stage3-bg6">stage3-bg6 site</a><br/><br/>----------<br/><a href="http://github.com/40623144/cd2021">40623144 repo</a> | <a href="http://40623144.github.io/cd2021">40623144 site</a> | <a href="http://github.com/40623144/stage3-bg7">stage3-bg7 repo</a> | <a href="http://40623144.github.io/stage3-bg7">stage3-bg7 site</a><br/><a href="http://github.com/40823233/cd2021">40823233 repo</a> | <a href="http://40823233.github.io/cd2021">40823233 site</a> | <a href="http://github.com/40823233/stage3-bg7">stage3-bg7 repo</a> | <a href="http://40823233.github.io/stage3-bg7">stage3-bg7 site</a><br/><a href="http://github.com/s40723224/cd2021">s40723224 repo</a> | <a href="http://s40723224.github.io/cd2021">s40723224 site</a> | <a href="http://github.com/s40723224/stage3-bg7">stage3-bg7 repo</a> | <a href="http://s40723224.github.io/stage3-bg7">stage3-bg7 site</a><br/><a href="http://github.com/40823241/cd2021">40823241 repo</a> | <a href="http://40823241.github.io/cd2021">40823241 site</a> | <a href="http://github.com/40823241/stage3-bg7">stage3-bg7 repo</a> | <a href="http://40823241.github.io/stage3-bg7">stage3-bg7 site</a><br/><a href="http://github.com/40423155/cd2021">40423155 repo</a> | <a href="http://40423155.github.io/cd2021">40423155 site</a> | <a href="http://github.com/40423155/stage3-bg7">stage3-bg7 repo</a> | <a href="http://40423155.github.io/stage3-bg7">stage3-bg7 site</a><br/><a href="http://github.com/40823227/cd2021">40823227 repo</a> | <a href="http://40823227.github.io/cd2021">40823227 site</a> | <a href="http://github.com/40823227/stage3-bg7">stage3-bg7 repo</a> | <a href="http://40823227.github.io/stage3-bg7">stage3-bg7 site</a><br/><a href="http://github.com/s40723233/cd2021">s40723233 repo</a> | <a href="http://s40723233.github.io/cd2021">s40723233 site</a> | <a href="http://github.com/s40723233/stage3-bg7">stage3-bg7 repo</a> | <a href="http://s40723233.github.io/stage3-bg7">stage3-bg7 site</a><br/><br/>----------</p>
<p></p>
<p>二、建立 stage3_2b_random.py 用以<span>每組亂數抽選 2 名組員</span></p>
<p><span><img alt="" height="521" src="/images/task1-2.PNG" width="600"/></span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/6vFlVcc9lVw" title="YouTube video player" width="560"></iframe></p><h3>task2</h3>
<p><yt-formatted-string class="style-scope ytd-video-primary-info-renderer" force-default-style="">remoteapi 2w1a 練習</yt-formatted-string></p>
<p><img alt="" height="321" src="/images/task2-2.PNG" width="600"/></p>
<p></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/MOkXnBlsgnA" title="YouTube video player" width="560"></iframe></p>
<h3>task3</h3>
<p>OBS直播步驟</p>
<p><img alt="" height="192" src="/images/OBS-01.png" width="300"/></p>
<p><img alt="" height="177" src="/images/OBS-1.png" width="300"/></p>
<p><img alt="" height="92" src="/images/OBS-2.png" width="300"/></p>
<p><img alt="" height="91" src="/images/OBS-3.png" width="300"/></p>
<p><img alt="" height="145" src="/images/OBS-4.png" width="300"/></p>
<p><img alt="" height="299" src="/images/OBS-5.png" width="300"/></p>
<p>選擇視窗擷取或顯示器擷取</p>
<h2>W14</h2>
<p>RoboDK 練習</p>
<p><img alt="" height="317" src="/images/RoboDK.png" width="600"/></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/2Ai5_qFjC9A" title="YouTube video player" width="560"></iframe></p>
<p>pick_and_place.py範例內容:</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false"># KMOLab Portable RoboDK pick and place
from robolink import *    # API to communicate with robodk
from robodk import *      # robodk robotics toolbox

# Setup global parameters
BALL_DIAMETER = 100 # diameter of one ball
APPROACH = 100      # approach distance to grab each part, in mm
nTCPs = 6           # number of TCP's in the tool

#----------------------------------------------
# Function definitions

def box_calc(BALLS_SIDE=4, BALLS_MAX=None):
    """Calculate a list of points (ball center) as if the balls were stored in a box"""
    if BALLS_MAX is None: BALLS_MAX = BALLS_SIDE**3
    xyz_list = []
    for h in range(BALLS_SIDE):
        for i in range(BALLS_SIDE):
            for j in range(BALLS_SIDE):
                xyz_list = xyz_list + [[(i+0.5)*BALL_DIAMETER, (j+0.5)*BALL_DIAMETER, (h+0.5)*BALL_DIAMETER]]
                if len(xyz_list) &gt;= BALLS_MAX:
                    return xyz_list
    return xyz_list

def pyramid_calc(BALLS_SIDE=4):
    """Calculate a list of points (ball center) as if the balls were place in a pyramid"""
    #the number of balls can be calculated as: int(BALLS_SIDE*(BALLS_SIDE+1)*(2*BALLS_SIDE+1)/6)
    BALL_DIAMETER = 100
    xyz_list = []
    sqrt2 = 2**(0.5)
    for h in range(BALLS_SIDE):
        for i in range(BALLS_SIDE-h):
            for j in range(BALLS_SIDE-h):
                height = h*BALL_DIAMETER/sqrt2 + BALL_DIAMETER/2
                xyz_list = xyz_list + [[i*BALL_DIAMETER + (h+1)*BALL_DIAMETER*0.5, j*BALL_DIAMETER + (h+1)*BALL_DIAMETER*0.5, height]]
    return xyz_list

def balls_setup(frame, positions):
    """Place a list of balls in a reference frame. The reference object (ball) must have been previously copied to the clipboard."""
    nballs = len(positions)
    step = 1.0/(nballs - 1)
    for i in range(nballs):
        newball = frame.Paste()
        newball.setName('ball ' + str(i)) #set item name
        newball.setPose(transl(positions[i])) #set item position with respect to parent
        newball.setVisible(True, False) #make item visible but hide the reference frame
        newball.Recolor([1-step*i, step*i, 0.2, 1]) #set RGBA color

def cleanup_balls(parentnodes):
    """Delete all child items whose name starts with \"ball\", from the provided list of parent items."""
    todelete = []
    for item in parentnodes:
        todelete = todelete + item.Childs()

    for item in todelete:
        if item.Name().startswith('ball'):
            item.Delete()

def TCP_On(toolitem, tcp_id):
    """Attach the closest object to the toolitem Htool pose,
    furthermore, it will output appropriate function calls on the generated robot program (call to TCP_On)"""
    toolitem.AttachClosest()
    toolitem.RDK().RunMessage('Set air valve %i on' % (tcp_id+1))
    toolitem.RDK().RunProgram('TCP_On(%i)' % (tcp_id+1));
        
def TCP_Off(toolitem, tcp_id, itemleave=0):
    """Detaches the closest object attached to the toolitem Htool pose,
    furthermore, it will output appropriate function calls on the generated robot program (call to TCP_Off)"""
    toolitem.DetachAll(itemleave)
    toolitem.RDK().RunMessage('Set air valve %i off' % (tcp_id+1))
    toolitem.RDK().RunProgram('TCP_Off(%i)' % (tcp_id+1));


#----------------------------------------------------------
# The program starts here:

# Any interaction with RoboDK must be done through RDK:
RDK = Robolink()

# Turn off automatic rendering (faster)
RDK.Render(False)

#RDK.Set_Simulation_Speed(500); # set the simulation speed

# Gather required items from the station tree
robot = RDK.Item('Fanuc M-710iC/50')
robot_tools = robot.Childs()
#robottool = RDK.Item('MainTool')
frame1 = RDK.Item('Table 1')
frame2 = RDK.Item('Table 2')

# Copy a ball as an object (same as CTRL+C)
ballref = RDK.Item('reference ball')
ballref.Copy()

# Run a pre-defined station program (in RoboDK) to replace the two tables
prog_reset = RDK.Item('Replace objects')
prog_reset.RunProgram()

# Call custom procedure to remove old objects
cleanup_balls([frame1, frame2])

# Make a list of positions to place the objects
frame1_list = pyramid_calc(4)
frame2_list = pyramid_calc(4)

# Programmatically place the objects with a custom-made procedure
balls_setup(frame1, frame1_list)

# Delete previously generated tools
for tool in robot_tools:
    if tool.Name().startswith('TCP'):
        tool.Delete()
        
# Calculate tool frames for the suction cup tool of 6 suction cups
TCP_list = []
for i in range(nTCPs):
    TCPi_pose = transl(0,0,100)*rotz((360/nTCPs)*i*pi/180)*transl(125,0,0)*roty(pi/2)
    TCPi = robot.AddTool(TCPi_pose, 'TCP %i' % (i+1))
    TCP_list.append(TCPi)

TCP_0 = TCP_list[0]

# Turn on automatic rendering
RDK.Render(True)

# Move balls    
robot.setPoseTool(TCP_list[0])
nballs_frame1 = len(frame1_list)
nballs_frame2 = len(frame2_list)
idTake = nballs_frame1 - 1
idLeave = 0
idTCP = 0
target_app_frame = transl(2*BALL_DIAMETER, 2*BALL_DIAMETER, 4*BALL_DIAMETER)*roty(pi)*transl(0,0,-APPROACH)

while idTake &gt;= 0:
    # ------------------------------------------------------------------
    # first priority: grab as many balls as possible
    # the tool is empty at this point, so take as many balls as possible (up to a maximum of 6 -&gt; nTCPs)
    ntake = min(nTCPs, idTake + 1)

    # approach to frame 1
    robot.setPoseFrame(frame1)
    robot.setPoseTool(TCP_0)
    robot.MoveJ([0,0,0,0,10,-200])
    robot.MoveJ(target_app_frame)

    # grab ntake balls from frame 1
    for i in range(ntake):
        TCPi = TCP_list[i]
        robot.setPoseTool(TCPi)
        # calculate target wrt frame1: rotation about Y is needed since Z and X axis are inverted
        target = transl(frame1_list[idTake])*roty(pi)*rotx(30*pi/180)
        target_app = target*transl(0,0,-APPROACH)
        idTake = idTake - 1        
        robot.MoveL(target_app)
        robot.MoveL(target)
        TCP_On(TCPi, i)
        robot.MoveL(target_app)
 
    # ------------------------------------------------------------------
    # second priority: unload the tool     
    # approach to frame 2 and place the tool balls into table 2
    robot.setPoseTool(TCP_0)
    robot.MoveJ(target_app_frame)
    robot.MoveJ([0,0,0,0,10,-200])
    robot.setPoseFrame(frame2)    
    robot.MoveJ(target_app_frame)
    for i in range(ntake):
        TCPi = TCP_list[i]
        robot.setPoseTool(TCPi)
        if idLeave &gt; nballs_frame2-1:
            raise Exception("No room left to place objects in Table 2")
        
        # calculate target wrt frame1: rotation of 180 about Y is needed since Z and X axis are inverted
        target = transl(frame2_list[idLeave])*roty(pi)*rotx(30*pi/180)
        target_app = target*transl(0,0,-APPROACH)
        idLeave = idLeave + 1        
        robot.MoveL(target_app)
        robot.MoveL(target)
        TCP_Off(TCPi, i, frame2)
        robot.MoveL(target_app)

    robot.MoveJ(target_app_frame)

# Move home when the robot finishes
robot.MoveJ([0,0,0,0,10,-200])
</pre>
<p></p><h2>W15</h2>
<p><strong>MTB Robot 練習</strong></p>
<table style="width: 251.75px;">
<tbody>
<tr style="height: 21.4762px;">
<th scope="colgroup" style="width: 63px; height: 21.4762px; border-color: #000000; background-color: #ffffff; text-align: center; vertical-align: middle;"><span style="background-color: #cc99ff;"><strong>KEY</strong></span></th>
<th scope="colgroup" style="width: 103.75px; height: 21.4762px; border-color: #000000; background-color: #ffffff; text-align: center; vertical-align: middle;"><span style="background-color: #cc99ff;"><strong>功能</strong></span></th>
</tr>
<tr style="height: 21px;">
<th scope="colgroup" style="width: 63px; height: 21.4762px; border-color: #000000; background-color: #ffffff; text-align: center; vertical-align: middle;">D</th>
<th scope="colgroup" style="width: 103.75px; height: 21.4762px; border-color: #000000; background-color: #ffffff; text-align: center; vertical-align: middle;">下降</th>
</tr>
<tr style="height: 21px;">
<th scope="colgroup" style="width: 63px; height: 21.4762px; border-color: #000000; background-color: #ffffff; text-align: center; vertical-align: middle;">U</th>
<th scope="colgroup" style="width: 103.75px; height: 21.4762px; border-color: #000000; background-color: #ffffff; text-align: center; vertical-align: middle;">上升</th>
</tr>
<tr style="height: 21px;">
<th scope="colgroup" style="width: 63px; height: 21.4762px; border-color: #000000; background-color: #ffffff; text-align: center; vertical-align: middle;">L</th>
<th scope="colgroup" style="width: 103.75px; height: 21.4762px; border-color: #000000; background-color: #ffffff; text-align: center; vertical-align: middle;">向左</th>
</tr>
<tr style="height: 21px;">
<th scope="colgroup" style="width: 63px; height: 21.4762px; border-color: #000000; background-color: #ffffff; text-align: center; vertical-align: middle;">R</th>
<th scope="colgroup" style="width: 103.75px; height: 21.4762px; border-color: #000000; background-color: #ffffff; text-align: center; vertical-align: middle;">向右</th>
</tr>
<tr style="height: 21px;">
<th scope="colgroup" style="width: 63px; height: 21.4762px; border-color: #000000; background-color: #ffffff; text-align: center; vertical-align: middle;">Q</th>
<th scope="colgroup" style="width: 103.75px; height: 21.4762px; border-color: #000000; background-color: #ffffff; text-align: center; vertical-align: middle;">放掉</th>
</tr>
<tr style="height: 21px;">
<th scope="colgroup" style="width: 63px; height: 21.4762px; border-color: #000000; background-color: #ffffff; text-align: center; vertical-align: middle;">P</th>
<th scope="colgroup" style="width: 103.75px; height: 21.4762px; border-color: #000000; background-color: #ffffff; text-align: center; vertical-align: middle;">令變數值變true</th>
</tr>
<tr style="height: 21px;">
<th scope="colgroup" style="width: 63px; height: 21.4762px; border-color: #000000; background-color: #ffffff; text-align: center; vertical-align: middle;">C</th>
<th scope="colgroup" style="width: 103.75px; height: 21.4762px; border-color: #000000; background-color: #ffffff; text-align: center; vertical-align: middle;">顯示座標</th>
</tr>
</tbody>
</table>
<p>Note：</p>
<ol>
<li>Dummy1 為黏膠</li>
<li>suction Pad 為吸盤，模組可由 components&gt;grippers 中拉出</li>
<li>坐標系從介面中的other中拉出</li>
<li>leo 中的 actuation 為按鈕設定及鍵盤作動</li>
<li>-- 為單行註解</li>
<li>-- [[　 ]]-- 為多行註解</li>
</ol>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/qAozBurBX3M" title="YouTube video player" width="560"></iframe></p>
<p>mtbrobot_w15.lua範例內容:</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">function sysCall_init() 
    axis1=sim.getObjectHandle('MTB_axis1')
    axis2=sim.getObjectHandle('MTB_axis2')
    axis3=sim.getObjectHandle('MTB_axis3')
    axis4=sim.getObjectHandle('MTB_axis4')
    mtb3=sim.getObjectHandle('MTB_link3Respondable')
    suctionPad=sim.getObjectHandle('suctionPad')
    BaseFrame=sim.getObjectHandle("BaseFrame")
    block =sim.getObjectHandle("block")
    rotation1 = 0
    distance3 = 0
    deg = math.pi/180
end
function sysCall_actuation() 
    -- 吸盤往下降時, 直接貼在方塊頂部的校正值, 單位 m
    -- 向下較正值為 4.2 mm
    calibration = 0.0042
    message, auxiliaryData=sim.getSimulatorMessage()
        while message ~= -1 do
            key=auxiliaryData[1]
            sim.addStatusbarMessage('使用者按下 key:'..key)
            if (message==sim.message_keypress) then
                if (auxiliaryData[1]==112) then --p activate the suction pad
                    -- if key p pressed activate the suction mode
sim.setScriptSimulationParameter(sim.getScriptAssociatedWithObject(suctionPad),'active','true')
                end -- if p
                if (auxiliaryData[1]==113) then --q deactivate the suction pad
                    -- if key q pressed deactivate the suction mode
sim.setScriptSimulationParameter(sim.getScriptAssociatedWithObject(suctionPad),'active','false')
                end -- if q
                if (auxiliaryData[1]==114) then --r right turn in degree
                    -- if key r pressed axis1 angle adds 5 degrees
                     rotation1 = rotation1 + 5*deg
                     sim.setJointPosition(axis1, rotation1)
                end -- if r
                if (auxiliaryData[1]==108) then --l left turn in degree
                    -- if key l pressed axis1 angle substract 5 degrees
                     rotation1 = rotation1 - 5*deg
                     sim.setJointPosition(axis1, rotation1)
                end -- if l
                if (auxiliaryData[1]==100) then --d suction pad down
                    -- if key d pressed axis3 will down 0.01 m plus calibration
                     distance3 = distance3 + 0.01 + calibration
                     sim.setJointPosition(axis3, distance3)
                end -- if d
                if (auxiliaryData[1]==117) then --u suction pad up
                    -- if key u pressed axis3 will up 0.01 m minus calibration
                    -- 吸盤往下升 1 公分加上校正值
                     distance3 = distance3 - 0.01 - calibration
                     sim.setJointPosition(axis3, distance3)
                end -- if u
                if (auxiliaryData[1]==99) then --c coordinate of block
                    blockPosition = sim.getObjectPosition(block, BaseFrame)
                    sim.addStatusbarMessage("方塊目前座標為:"..table_to_string(blockPosition))
                end --if c
           end  -- if
    message, auxiliaryData=sim.getSimulatorMessage()
        end -- while
end -- function

function sysCall_init()
    joint1=sim.getObjectHandle('joint1')
    joint2=sim.getObjectHandle('joint2')
    joint3=sim.getObjectHandle('joint3')
    jointz=sim.getObjectHandle('jointZ')
    sim.setJointTargetPosition(joint1,0)
    sim.setJointTargetPosition(joint2,0)
    sim.setJointTargetPosition(joint3,0)
    sim.setJointTargetPosition(jointz,0)
    deg1=0
    deg2=0
    deg3=0
end

function sysCall_actuation()
    message,auxiliaryData=sim.getSimulatorMessage()
    while message~=-1 do
        if (message==sim.message_keypress) then
            if (auxiliaryData[1]==2009) then
            deg1=deg1+1
            deg3=deg2-deg1
            sim.setJointTargetPosition(joint1,deg1*math.pi/180)
            end
            if (auxiliaryData[1]==2010) then
            deg1=deg1-1
            deg3=deg2-deg1
            sim.setJointTargetPosition(joint1,deg1*math.pi/180)
            end
            if (auxiliaryData[1]==2007) then
            deg2=deg2+1
            deg3=deg1-deg2
            sim.setJointTargetPosition(joint2,deg2*math.pi/180)
            end
            if (auxiliaryData[1]==2008) then
            deg2=deg2-1
            deg3=deg1-deg2
            sim.setJointTargetPosition(joint2,deg2*math.pi/180)
            end
            if (auxiliaryData[1]==115) then
                sim.setJointTargetPosition(jointz,-0.018)
                sim.setIntegerSignal("pad_switch",1)
            end
            if(auxiliaryData[1]==119) then
                sim.setJointTargetPosition(jointz,0)
            end
            if(auxiliaryData[1]==32) then
                sim.setIntegerSignal("pad_switch",0)
            end
            sim.setJointTargetPosition(joint3,deg3*math.pi/180)
        end
    message,auxiliaryData=sim.getSimulatorMessage()
    end
end

function sysCall_init()
    joint1=sim.getObjectHandle('joint1')
    joint2=sim.getObjectHandle('joint2')    
    joint3=sim.getObjectHandle('joint3')
    jointz=sim.getObjectHandle('jointZ')
    sim.setJointTargetPosition(joint1,0)
    sim.setJointTargetPosition(joint2,0)
    sim.setJointTargetPosition(joint3,0)
    sim.setJointTargetPosition(jointz,0)
    deg1=0
    deg2=0
    deg3=0
end

function sysCall_actuation()
    message,auxiliaryData=sim.getSimulatorMessage()
    while message~=-1 do
        if (message==sim.message_keypress) then
            if (auxiliaryData[1]==100) then
            deg1=deg1+1
            deg3=deg2-deg1
            sim.setJointTargetPosition(joint1,deg1*math.pi/180)
            end
            if (auxiliaryData[1]==97) then
            deg1=deg1-1
            deg3=deg2-deg1
            sim.setJointTargetPosition(joint1,deg1*math.pi/180)
            end
            if (auxiliaryData[1]==119) then
            deg2=deg2+1
            deg3=deg1-deg2
            sim.setJointTargetPosition(joint2,deg2*math.pi/180)
            end
            if (auxiliaryData[1]==115) then
            deg2=deg2-1
            deg3=deg1-deg2
            sim.setJointTargetPosition(joint2,deg2*math.pi/180)
            end
            if (auxiliaryData[1]==2008) then
                sim.setJointTargetPosition(jointz,-0.018)
                sim.setIntegerSignal("pad_switch",1)
            end
            if(auxiliaryData[1]==2007) then
                sim.setJointTargetPosition(jointz,0)
            end
            if(auxiliaryData[1]==32) then
                sim.setIntegerSignal("pad_switch",0)
            end
            sim.setJointTargetPosition(joint3,deg3*math.pi/180)
        end
    message,auxiliaryData=sim.getSimulatorMessage()
    end
end

function sysCall_sensing() 
--[[
    -- Read Proximity sensor (0= nothing detected, 1 = object detected)
    local res = sim.readProximitySensor(proximity)

    -- Check if possible to insert an new box
    if (sim.getSimulationTime()-T_last_inserted &gt; T_insert) and not hasStopped then
        insertBox()
    end

    -- If proximity sensor detects an object, stop the belt, stop inserting objects
    if res == 1 and not hasStopped then
        if boolList[1] then
            sim.setScriptSimulationParameter(sim.handle_self,"conveyorBeltVelocity",0)
            deltaTime = sim.getSimulationTime()-T_last_inserted
            hasStopped = true
        else
            local box = table.remove(boxList,1)
            local boxDummy = table.remove(boxDummyList,1)
            table.remove(boolList,1)

            sim.removeObject(box)
            sim.removeObject(boxDummy)
        end
    end

    -- If proximity sensor detects nothing and belt has stopped, start belt, continue inserting
    if res == 0 and hasStopped then
        sim.setScriptSimulationParameter(sim.handle_self,"conveyorBeltVelocity",beltSpeed)
        hasStopped = false
        T_last_inserted = sim.getSimulationTime()-deltaTime
    end
    
]]--
end
function sysCall_cleanup() 
end 
-- Convert a lua table into a lua syntactically correct string
function table_to_string(tbl)
    local result = "{"
    for k, v in pairs(tbl) do
        -- Check the key type (ignore any numerical keys - assume its an array)
        if type(k) == "string" then
            result = result.."[\""..k.."\"]".."="
        end

        -- Check the value type
        if type(v) == "table" then
            result = result..table_to_string(v)
        elseif type(v) == "boolean" then
            result = result..tostring(v)
        else
            v = round(v, 4)
            result = result.."\""..v.."\""
        end
        result = result..","
    end
    -- Remove leading commas from the result
    if result ~= "" then
        result = result:sub(1, result:len()-1)
    end
    return result.."}"
end
function round(x, n)
    n = math.pow(10, n or 0)
    x = x * n
    if x &gt;= 0 then x = math.floor(x + 0.5) else x = math.ceil(x - 0.5) end
    return x / n
end


function insertBox()
    -- Generate random numbers
    local rand1 = math.random()
    local rand2 = math.random()
    local rand3 = math.random()
    -- Generate random disturbances on position and orientation
    local dx = (2*rand1-1)*0.1
    local dy = (2*rand2-1)*0.1
    local dphi = (2*rand3-1)*0.5
    local disturbedCoordinates = {0,0,0}
    disturbedCoordinates[1] = insertCoordinate[1]+dx
    disturbedCoordinates[2] = insertCoordinate[2]+dy
    disturbedCoordinates[3] = insertCoordinate[3]
    -- Copy and paste box and boxDummy
    local insertedObjects = sim.copyPasteObjects({box,boxDummy},0)
    -- Update last inserted box time
    T_last_inserted = sim.getSimulationTime()
    -- Move and rotate
    sim.setObjectPosition(insertedObjects[1],-1,disturbedCoordinates)
    sim.setObjectOrientation(insertedObjects[1],-1,{0,0,dphi})
    -- Store handles to boxes and dummies
    table.insert(boxList,insertedObjects[1])
    table.insert(boxDummyList,insertedObjects[2]) 
    -- Decide if object is good or bad
    local decision = math.random() 
    if decision &lt;= goodPercentage then
    -- Object is good, assign goodColor
        sim.setShapeColor(insertedObjects[1],nil,sim.colorcomponent_ambient_diffuse,goodColor)
        table.insert(boolList,true)
    else
    -- Object is bad, assign random color
        sim.setShapeColor(insertedObjects[1],nil,sim.colorcomponent_ambient_diffuse,{rand1,rand2,rand3})
        table.insert(boolList,false)
    end
end
</pre>
<p></p>
<p>影片翻譯：</p>
<p>法1：YouTube介面 設定&gt;字幕&gt;自動翻譯&gt;中文(繁體)</p>
<p>(翻譯較不精確)</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/IKOGwoJ2HLk" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/eIZuz1XCd0w" title="YouTube video player" width="560"></iframe></p><h2>W16</h2>
<p><strong>Onshape零件</strong></p>
<p><a href="https://cad.onshape.com/documents/dd17fb8b3030943bcb40ae9e/w/709f20217e3655af3c9098a0/e/e9a44a69befef5156d104587">Onshape圖檔</a></p>
<p>繪製圖檔過程:</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/1kql6cnO_rQ" title="YouTube video player" width="560"></iframe></p>
<hr/>
<p><strong>CoppeliaSim場景</strong></p>
<p><a href="https://drive.google.com/drive/folders/1-3RbRqfTPhJT4b4TQYNrgcvb8IKtOp2A?usp=sharing">W16_exam_雲端硬碟</a></p>
<p>建立場景過程:</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/MyBdVHWCBdI" title="YouTube video player" width="560"></iframe></p>
<hr/>
<p><strong>suction pad 吸盤</strong></p>
<p>加入吸盤後，鍵盤控制作動:</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/ZF1szMlIgfE" title="YouTube video player" width="560"></iframe></p>
<p>參考鍵碼:</p>
<p><img alt="" height="242" src="/images/keycode.PNG" width="500"/></p>
<p>keyboard.lua內容:</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">function sysCall_init()
    joint1=sim.getObjectHandle('joint1')
    joint2=sim.getObjectHandle('joint2')    
    joint3=sim.getObjectHandle('joint3')
    jointz=sim.getObjectHandle('jointZ')
    sim.setJointTargetPosition(joint1,0)
    sim.setJointTargetPosition(joint2,0)
    sim.setJointTargetPosition(joint3,0)
    sim.setJointTargetPosition(jointz,0)
    deg1=0
    deg2=0
    deg3=0
end

function sysCall_actuation()
    message,auxiliaryData=sim.getSimulatorMessage()
    while message~=-1 do
        if (message==sim.message_keypress) then
            if (auxiliaryData[1]==100) then
            deg1=deg1+1
            deg3=deg2-deg1
            sim.setJointTargetPosition(joint1,deg1*math.pi/180)
            end
            if (auxiliaryData[1]==97) then
            deg1=deg1-1
            deg3=deg2-deg1
            sim.setJointTargetPosition(joint1,deg1*math.pi/180)
            end
            if (auxiliaryData[1]==119) then
            deg2=deg2+1
            deg3=deg1-deg2
            sim.setJointTargetPosition(joint2,deg2*math.pi/180)
            end
            if (auxiliaryData[1]==115) then
            deg2=deg2-1
            deg3=deg1-deg2
            sim.setJointTargetPosition(joint2,deg2*math.pi/180)
            end
            if (auxiliaryData[1]==2008) then
                sim.setJointTargetPosition(jointz,-0.018)
                sim.setIntegerSignal("pad_switch",1)
            end
            if(auxiliaryData[1]==2007) then
                sim.setJointTargetPosition(jointz,0)
            end
            if(auxiliaryData[1]==32) then
                sim.setIntegerSignal("pad_switch",0)
            end
            sim.setJointTargetPosition(joint3,deg3*math.pi/180)
        end
    message,auxiliaryData=sim.getSimulatorMessage()
    end
end
</pre>
<p></p>
<hr/>
<p><strong>逆向運動學函式</strong></p>
<p>Lua作動:</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/Ils5WMxLIeM" title="YouTube video player" width="560"></iframe></p>
<p>Lua control.lua內容:</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">function moving(x,y)
    a=0.467
    b=0.401
    c=math.pow(math.pow(x,2)+math.pow(y,2),0.5)
    s=(a+b+c)*0.5
    area=math.pow((s*(s-a)*(s-b)*(s-c)),0.5)
    h=area/(2*c)
    deg1_base=math.atan(x/y)
    if x&lt;0 and y&lt;0 then
        deg1_base=deg1_base+math.pi
    end
    deg1_tri=math.asin(h/a)
    deg1=deg1_base+deg1_tri
    deg2=math.pi-(0.5*math.pi-deg1_tri)-math.acos(h/b)
    deg3=deg2-deg1
    print(deg3)
    sim.setJointTargetPosition(joint1,deg1)
    sim.setJointTargetPosition(joint2,-deg2)
    sim.setJointTargetPosition(joint3,deg3)
    
end

function pick_and_place(x,y)
    sim.setIntegerSignal("pad_switch",0)
    sim.wait(t)
    moving(0,0.868)
    sim.wait(t)
    moving(x,y)
    sim.wait(t)
    sim.setIntegerSignal("pad_switch",1)
    sim.setJointTargetPosition(jointz,-0.018)
    sim.wait(t)
    sim.setJointTargetPosition(jointz,0)
    sim.wait(t)
end

function sysCall_threadmain()
    t=5
    joint1=sim.getObjectHandle('joint1')
    joint2=sim.getObjectHandle('joint2')
    jointz=sim.getObjectHandle('jointZ')
    joint3=sim.getObjectHandle('joint3')
    sim.setJointTargetPosition(joint1,0)
    sim.setJointTargetPosition(joint2,0)
    sim.setJointTargetPosition(joint3,0)
    sim.setIntegerSignal("pad_switch",1)
    sim.setJointTargetPosition(jointz,-0.018)
    sim.wait(t)
    sim.setJointTargetPosition(jointz,0)
    sim.wait(t)
    while sim.getSimulationState()~=sim.simulation_advancing_abouttostopre do
        x=0.2
        y=0.7
        moving(x,y)
        sim.wait(t)
        pick_and_place(x,y)
        x=-0.3
        y=-0.55
        moving(x,y)
        sim.wait(t)
        pick_and_place(x,y)
    end
end</pre>
<p></p>
<hr/>
<p><strong>remote API</strong></p>
<p>remote API作動:</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/4HnbfoViwME" title="YouTube video player" width="560"></iframe></p>
<p>Python remote API.py內容:</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">import sim as vrep
import math
import random
import time
import math

def moving(x,y):
    a=0.467
    b=0.401
    c=math.pow(math.pow(x,2)+math.pow(y,2),0.5)
    s=(a+b+c)*0.5
    area=math.pow((s*(s-a)*(s-b)*(s-c)),0.5)
    h=area/(2*c)
    deg1_base=math.atan(x/y)
    if x&lt;0 and y&lt;0 :
        deg1_base=deg1_base+math.pi
    deg1_tri=math.asin(h/a)
    deg1=deg1_base+deg1_tri
    deg2=math.pi-(0.5*math.pi-deg1_tri)-math.acos(h/b)
    deg3=deg2-deg1
    vrep.simxSetJointTargetPosition(clientID,joint01,deg1,opmode)
    vrep.simxSetJointTargetPosition(clientID,joint02,(-deg2),opmode)
    vrep.simxSetJointTargetPosition(clientID,joint03,deg3,opmode)

def pick_and_place(x,y):
    vrep.simxSetIntegerSignal(clientID,"pad_switch",0,opmode)
    time.sleep(tt)
    moving(0,0.868)
    time.sleep(tt)
    moving(x,y)
    time.sleep(tt)
    vrep.simxSetIntegerSignal(clientID,"pad_switch",1,opmode)
    vrep.simxSetJointTargetPosition(clientID,jointz,-0.018,opmode)
    time.sleep(tt)
    vrep.simxSetJointTargetPosition(clientID,jointz,0,opmode)
    time.sleep(tt)



print ('Start')
 
vrep.simxFinish(-1)
 
clientID = vrep.simxStart('172.20.10.4', 19997, True, True, 5000, 5)
  
if clientID != -1:
    print ('Connected to remote API server')
      
    res = vrep.simxAddStatusbarMessage(
        clientID, "40823224",
        vrep.simx_opmode_oneshot)
    if res not in (vrep.simx_return_ok, vrep.simx_return_novalue_flag):
        print("Could not add a message to the status bar.")
  
     
    opmode = vrep.simx_opmode_oneshot_wait
    STREAMING = vrep.simx_opmode_streaming
  
     
    vrep.simxStartSimulation(clientID, opmode)
    ret,joint01=vrep.simxGetObjectHandle(clientID,"joint1",opmode)
    ret,joint02=vrep.simxGetObjectHandle(clientID,"joint2",opmode)
    ret,joint03=vrep.simxGetObjectHandle(clientID,"joint3",opmode)
    ret,jointz=vrep.simxGetObjectHandle(clientID,"jointZ",opmode)
    tt=1.5
 

    while True :
        vrep.simxSetJointTargetPosition(clientID,joint01,0,opmode)
        vrep.simxSetJointTargetPosition(clientID,joint02,0,opmode)
        vrep.simxSetJointTargetPosition(clientID,joint03,0,opmode)
        vrep.simxSetJointTargetPosition(clientID,jointz,-0.018,opmode)
        vrep.simxSetIntegerSignal(clientID,"pad_switch",1,opmode)
        time.sleep(tt)
        vrep.simxSetJointTargetPosition(clientID,jointz,0,opmode)
        time.sleep(tt)
        while True:
            x=0.2
            y=0.7
            moving(x,y)
            time.sleep(tt)
            pick_and_place(x,y)
            x=-0.3
            y=-0.55
            moving(x,y)
            time.sleep(tt)
            pick_and_place(x,y)
</pre>
<p></p><h3>Onshape零件</h3>
<p><a href="https://cad.onshape.com/documents/dd17fb8b3030943bcb40ae9e/w/709f20217e3655af3c9098a0/e/e9a44a69befef5156d104587">Onshape圖檔</a></p>
<p>繪製圖檔過程:</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/1kql6cnO_rQ" title="YouTube video player" width="560"></iframe></p><h3>CoppeliaSim場景</h3>
<p><a href="https://drive.google.com/drive/folders/1-3RbRqfTPhJT4b4TQYNrgcvb8IKtOp2A?usp=sharing">W16_exam_雲端硬碟</a></p>
<p>建立場景過程:</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/MyBdVHWCBdI" title="YouTube video player" width="560"></iframe></p><h3>suction pad 吸盤</h3>
<p>加入吸盤後，鍵盤控制作動:</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/ZF1szMlIgfE" title="YouTube video player" width="560"></iframe></p>
<p>參考鍵碼:</p>
<p><img alt="" height="242" src="/images/keycode.PNG" width="500"/></p>
<p>keyboard.lua內容:</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">function sysCall_init()
    joint1=sim.getObjectHandle('joint1')
    joint2=sim.getObjectHandle('joint2')    
    joint3=sim.getObjectHandle('joint3')
    jointz=sim.getObjectHandle('jointZ')
    sim.setJointTargetPosition(joint1,0)
    sim.setJointTargetPosition(joint2,0)
    sim.setJointTargetPosition(joint3,0)
    sim.setJointTargetPosition(jointz,0)
    deg1=0
    deg2=0
    deg3=0
end

function sysCall_actuation()
    message,auxiliaryData=sim.getSimulatorMessage()
    while message~=-1 do
        if (message==sim.message_keypress) then
            if (auxiliaryData[1]==100) then
            deg1=deg1+1
            deg3=deg2-deg1
            sim.setJointTargetPosition(joint1,deg1*math.pi/180)
            end
            if (auxiliaryData[1]==97) then
            deg1=deg1-1
            deg3=deg2-deg1
            sim.setJointTargetPosition(joint1,deg1*math.pi/180)
            end
            if (auxiliaryData[1]==119) then
            deg2=deg2+1
            deg3=deg1-deg2
            sim.setJointTargetPosition(joint2,deg2*math.pi/180)
            end
            if (auxiliaryData[1]==115) then
            deg2=deg2-1
            deg3=deg1-deg2
            sim.setJointTargetPosition(joint2,deg2*math.pi/180)
            end
            if (auxiliaryData[1]==2008) then
                sim.setJointTargetPosition(jointz,-0.018)
                sim.setIntegerSignal("pad_switch",1)
            end
            if(auxiliaryData[1]==2007) then
                sim.setJointTargetPosition(jointz,0)
            end
            if(auxiliaryData[1]==32) then
                sim.setIntegerSignal("pad_switch",0)
            end
            sim.setJointTargetPosition(joint3,deg3*math.pi/180)
        end
    message,auxiliaryData=sim.getSimulatorMessage()
    end
end
</pre>
<p></p><h3>逆向運動學函式</h3>
<p>Lua作動:</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/Ils5WMxLIeM" title="YouTube video player" width="560"></iframe></p>
<p>Lua control.lua內容:</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">function moving(x,y)
    a=0.467
    b=0.401
    c=math.pow(math.pow(x,2)+math.pow(y,2),0.5)
    s=(a+b+c)*0.5
    area=math.pow((s*(s-a)*(s-b)*(s-c)),0.5)
    h=area/(2*c)
    deg1_base=math.atan(x/y)
    if x&lt;0 and y&lt;0 then
        deg1_base=deg1_base+math.pi
    end
    deg1_tri=math.asin(h/a)
    deg1=deg1_base+deg1_tri
    deg2=math.pi-(0.5*math.pi-deg1_tri)-math.acos(h/b)
    deg3=deg2-deg1
    print(deg3)
    sim.setJointTargetPosition(joint1,deg1)
    sim.setJointTargetPosition(joint2,-deg2)
    sim.setJointTargetPosition(joint3,deg3)
    
end

function pick_and_place(x,y)
    sim.setIntegerSignal("pad_switch",0)
    sim.wait(t)
    moving(0,0.868)
    sim.wait(t)
    moving(x,y)
    sim.wait(t)
    sim.setIntegerSignal("pad_switch",1)
    sim.setJointTargetPosition(jointz,-0.018)
    sim.wait(t)
    sim.setJointTargetPosition(jointz,0)
    sim.wait(t)
end

function sysCall_threadmain()
    t=5
    joint1=sim.getObjectHandle('joint1')
    joint2=sim.getObjectHandle('joint2')
    jointz=sim.getObjectHandle('jointZ')
    joint3=sim.getObjectHandle('joint3')
    sim.setJointTargetPosition(joint1,0)
    sim.setJointTargetPosition(joint2,0)
    sim.setJointTargetPosition(joint3,0)
    sim.setIntegerSignal("pad_switch",1)
    sim.setJointTargetPosition(jointz,-0.018)
    sim.wait(t)
    sim.setJointTargetPosition(jointz,0)
    sim.wait(t)
    while sim.getSimulationState()~=sim.simulation_advancing_abouttostopre do
        x=0.2
        y=0.7
        moving(x,y)
        sim.wait(t)
        pick_and_place(x,y)
        x=-0.3
        y=-0.55
        moving(x,y)
        sim.wait(t)
        pick_and_place(x,y)
    end
end</pre>
<p></p><h3>remote API</h3>
<p>remote API作動:</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/4HnbfoViwME" title="YouTube video player" width="560"></iframe></p>
<p>Python remote API.py內容:</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">import sim as vrep
import math
import random
import time
import math

def moving(x,y):
    a=0.467
    b=0.401
    c=math.pow(math.pow(x,2)+math.pow(y,2),0.5)
    s=(a+b+c)*0.5
    area=math.pow((s*(s-a)*(s-b)*(s-c)),0.5)
    h=area/(2*c)
    deg1_base=math.atan(x/y)
    if x&lt;0 and y&lt;0 :
        deg1_base=deg1_base+math.pi
    deg1_tri=math.asin(h/a)
    deg1=deg1_base+deg1_tri
    deg2=math.pi-(0.5*math.pi-deg1_tri)-math.acos(h/b)
    deg3=deg2-deg1
    vrep.simxSetJointTargetPosition(clientID,joint01,deg1,opmode)
    vrep.simxSetJointTargetPosition(clientID,joint02,(-deg2),opmode)
    vrep.simxSetJointTargetPosition(clientID,joint03,deg3,opmode)

def pick_and_place(x,y):
    vrep.simxSetIntegerSignal(clientID,"pad_switch",0,opmode)
    time.sleep(tt)
    moving(0,0.868)
    time.sleep(tt)
    moving(x,y)
    time.sleep(tt)
    vrep.simxSetIntegerSignal(clientID,"pad_switch",1,opmode)
    vrep.simxSetJointTargetPosition(clientID,jointz,-0.018,opmode)
    time.sleep(tt)
    vrep.simxSetJointTargetPosition(clientID,jointz,0,opmode)
    time.sleep(tt)



print ('Start')
 
vrep.simxFinish(-1)
 
clientID = vrep.simxStart('172.20.10.4', 19997, True, True, 5000, 5)
  
if clientID != -1:
    print ('Connected to remote API server')
      
    res = vrep.simxAddStatusbarMessage(
        clientID, "40823224",
        vrep.simx_opmode_oneshot)
    if res not in (vrep.simx_return_ok, vrep.simx_return_novalue_flag):
        print("Could not add a message to the status bar.")
  
     
    opmode = vrep.simx_opmode_oneshot_wait
    STREAMING = vrep.simx_opmode_streaming
  
     
    vrep.simxStartSimulation(clientID, opmode)
    ret,joint01=vrep.simxGetObjectHandle(clientID,"joint1",opmode)
    ret,joint02=vrep.simxGetObjectHandle(clientID,"joint2",opmode)
    ret,joint03=vrep.simxGetObjectHandle(clientID,"joint3",opmode)
    ret,jointz=vrep.simxGetObjectHandle(clientID,"jointZ",opmode)
    tt=1.5
 

    while True :
        vrep.simxSetJointTargetPosition(clientID,joint01,0,opmode)
        vrep.simxSetJointTargetPosition(clientID,joint02,0,opmode)
        vrep.simxSetJointTargetPosition(clientID,joint03,0,opmode)
        vrep.simxSetJointTargetPosition(clientID,jointz,-0.018,opmode)
        vrep.simxSetIntegerSignal(clientID,"pad_switch",1,opmode)
        time.sleep(tt)
        vrep.simxSetJointTargetPosition(clientID,jointz,0,opmode)
        time.sleep(tt)
        while True:
            x=0.2
            y=0.7
            moving(x,y)
            time.sleep(tt)
            pick_and_place(x,y)
            x=-0.3
            y=-0.55
            moving(x,y)
            time.sleep(tt)
            pick_and_place(x,y)
</pre>
<p></p><h2>W17</h2>
<p><span>評分模擬影片</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/CNS0_DdC9N4" title="YouTube video player" width="560"></iframe></p><h1>筆記</h1>
<h2>leo編輯</h2>
<p>若要新增節點：ctrl+I</p>
<p><a href="https://github.com/mdecourse/cmsimde"></a>變更為子節點：ctrl+R</p>
<p>上下左右移動：</p>
<p>右：<span>ctrl+R、左：ctrl+L、上：ctrl+U、下：ctrl+D</span></p>
<h2>使用cms批次檔</h2>
<p>使用 cms.bat 成功開啟9443</p>
<p><img alt="" height="128" src="/images/cms-1.PNG" width="600"/></p>
<p><span><img alt="" height="310" src="/images/cms.PNG" width="600"/></span></p>
<p></p>
<h2>CoppeliaSim操作筆記</h2>
<p>手寫筆記:</p>
<p><img alt="" height="336" src="/images/CoppeliaSim.jpg" width="600"/></p>
<p></p><h2>Gitlab</h2>
<p>Gitlab 倉儲頁面</p>
<p><img alt="" height="282" src="/images/gitlab.PNG" width="600"/></p>
<p>確認網頁OK</p>
<p><img alt="" height="151" src="/images/gitlab-1.PNG" width="600"/></p>
<p></p>
<p></p>
<h2>Fossil</h2>
<p>建立 Gogs</p>
<p><img alt="" height="235" src="/images/fossil-4.PNG" width="600"/></p>
<p>Gogs 頁面</p>
<p><img alt="" height="322" src="/images/fossil-5.PNG" width="600"/></p>
<p>輸入 <a href="https://fossil.kmol.info:9443/">https://fossil.kmol.info:9443/</a> 建立 fossil</p>
<p><img alt="" height="228" src="/images/fossil.PNG" width="600"/></p>
<p>登入</p>
<p><img alt="" height="120" src="/images/fossil-1.PNG" width="600"/></p>
<p>Setup&gt;<span>Users</span> 確認使用者</p>
<p><img alt="" height="92" src="/images/fossil-2.PNG" width="600"/></p>
<p>下載 fossil scm 放在 Y槽</p>
<p><img alt="" height="165" src="/images/fossil-3.PNG" width="600"/></p>
<p>更改名稱</p>
<p><img alt="" height="227" src="/images/fossil-6.PNG" width="600"/></p>
<p>輸入cd2021</p>
<p><img alt="" height="183" src="/images/fossil-7.PNG" width="600"/></p>
<p>點選Wiki</p>
<p><img alt="" height="295" src="/images/fossil-8.PNG" width="600"/></p>
<p>創建html</p>
<p>3443 可開啟 gogs</p>
<p>9443 可開啟 fossil</p>
<p><img alt="" height="144" src="/images/fossil-9.PNG" width="600"/></p>
<p>可預覽，預覽無問題後儲存並關閉</p>
<p><img alt="" height="235" src="/images/fossil-10.PNG" width="600"/></p>
<p>進入已自行創好的資料夾(fossil)</p>
<p><img alt="" height="65" src="/images/fossil-11.PNG" width="450"/></p>
<p>clone</p>
<p><img alt="" height="127" src="/images/fossil-12.PNG" width="600"/></p>
<p>將cd2021倉儲資料貼上至名為學號的資料夾內(fossil&gt;wd&gt;學號)</p>
<p>*wd為working directory，為了不要使其無限迴圈</p>
<p>*_FOSSIL_ 類似.git資料夾，儲存了版本的資料</p>
<p><img alt="" height="462" src="/images/fossil-18.PNG" width="600"/></p>
<p>開啟fossil</p>
<p><img alt="" height="296" src="/images/fossil-13.PNG" width="600"/></p>
<p>fossil 只要 commit 就好</p>
<p><img alt="" height="117" src="/images/fossil-14.PNG" width="600"/></p>
<p>成功上傳</p>
<p><img alt="" height="299" src="/images/fossil-15.PNG" width="600"/></p>
<p>輸入 <a href="https://fossil.kmol.info/u/40823224/doc/trunk/content/index.html">https://fossil.kmol.info/u/40823224/doc/trunk/content/index.html</a> 即跟 github page 相同</p>
<p><img alt="" height="149" src="/images/fossil-16.PNG" width="600"/></p>
